# 「符号理論」　Python演習（2023/11/10）
# 巡回符号の例として下記に偶数パリティ検査符号のプログラム例を示す。
# これを理解したうえで、以下の符号語を全て出力するプログラムを作成する（変更点を明記する）
# (1) k=3, n=4の偶数パリティ検査符号
# (2) g(x) = x^2 + x + 1の巡回符号(⇒3回繰り返し符号)
# (2) g(x) = x^3 + x + 1の(7,4)巡回ハミング符号
# (3) g(x) = x^4 + x + 1の(15,11)巡回ハミング符号
#
#
#　巡回符号の符号化プログラム（組織符号化）
def polymod(z,n,y,m): #多項式の剰余計算z(x)mod y(x)【多項式z(x)の次数n, 多項式y(x)の次数m】
    for i in range(n-m+1):
        z = z ^ ( y << (n-m-i)) if ( z >> (n-i) ) else z
    return z

def encoding(a): # 巡回符号の符号化　w(x)=a(x)x^m + c(x), c(x) = a(x)x^m mod g(x)
    return ((a << m)|polymod(a<<m,n-1,gx,m))

m = 1 # 生成多項式の次数 m = deg(g(x)) ※これが検査記号数
gx = 0b11 # 偶数パリティ符号の生成多項式 G(x) = x + 1 の２進表現(11)
k = 2 # 情報記号数
n = 3 # 符号長

for i in range(1<<(k)):
    print(format(i,'02b'),format(encoding(i),'03b')) 
# 偶数パリティ検査符号の符号語一覧表示(情報記号数2ビット、符号長3ビット) 情報記号と符号語の対応を理解する